apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'io.fabric'


def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.zakrodionov.protovary"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 15
        versionName "1.03"
        setProperty("archivesBaseName", "protovary-$versionName($versionCode)")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        def API_ENDPOINT = "API_ENDPOINT"
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", API_ENDPOINT, '"https://rskrf.ru/api/"'
            manifestPlaceholders = [enableCrashReporting: "true"]
            signingConfig signingConfigs.release

        }
        debug {
            debuggable true
            zipAlignEnabled false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", API_ENDPOINT, '"https://rskrf.ru/api/"'
            manifestPlaceholders = [enableCrashReporting: "false"]
        }
        staging {
            initWith debug
            minifyEnabled true
            buildConfigField "String", API_ENDPOINT, '"https://rskrf.ru/api/"'
            manifestPlaceholders = [enableCrashReporting: "false"]
        }

    }
    
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    dataBinding {
        enabled = true
    }

    bundle {
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }
}

dependencies {
    def room_version = "2.1.0-alpha04"
    def retrofitVersion = '2.3.0'
    def anko_version = "0.10.8"
    def ktx_version = "1.1.0-alpha05"
    def coroutines_version = "1.1.1"
    def lifecycle_version = "2.1.0-alpha02"
    def koin_version = '1.0.2'
    def nav_version = "2.1.0-alpha01"
    def dagger_version = "2.21"
    def permissions_dispatcher_version = "4.3.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    //Support Libraries
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha03'
    implementation 'com.google.android.material:material:1.1.0-alpha04'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.media:media:1.1.0-alpha02'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //Retrofit
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    //Okhttp Interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'

    //EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    kapt "com.github.bumptech.glide:compiler:4.9.0"

    //AdapterDelegates
    implementation 'com.hannesdorfmann:adapterdelegates3:3.1.0'

    //Stetho
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'


    //Hawk
    implementation 'com.github.orhanobut:hawk:2.0.1'

    //Firebase
    implementation 'com.google.firebase:firebase-core:16.0.8'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'


    //Anko
    implementation "org.jetbrains.anko:anko:$anko_version"

    //Ktx
    implementation "androidx.core:core-ktx:$ktx_version"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    //Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    //region AAC
    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:2.1.0-alpha03"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0-alpha03"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    //Navigation
    // Kotlin KTX
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //Room
    implementation "androidx.room:room-runtime:2.1.0-alpha05"
    implementation "androidx.room:room-rxjava2:2.1.0-alpha05"
    implementation "androidx.room:room-coroutines:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //endregion

    //permission
    implementation "org.permissionsdispatcher:permissionsdispatcher:$permissions_dispatcher_version"
    kapt "org.permissionsdispatcher:permissionsdispatcher-processor:$permissions_dispatcher_version"

    //barcode
    implementation 'me.dm7.barcodescanner:zbar:1.9.13'

    //leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'

}

apply plugin: 'com.google.gms.google-services'
